{"version":3,"file":"bundle.js","sources":["../src/Config.js","../src/Tooltip.js","../src/Simulation.js","../src/Layout.js","../src/main.js","../src/Utils.js"],"sourcesContent":["// set the dimensions and margins of the graph\nexport const margin = {top: 100, right: 50, bottom: 50, left: 50},\n    width = 1400 - margin.left - margin.right,\n    height = 1400 - margin.top - margin.bottom,\n    svg_width = width + margin.left + margin.right,\n    svg_height = height + margin.top + margin.bottom;\n\nexport const projection = d3.geoAlbers()\n    .center([24.7731, 45.7909])\n    .rotate([-14, 3.3, -10])\n    .parallels([37, 54])\n    .scale(5000);\n\nexport const path = d3.geoPath()\n    .projection(projection);","// use a tooltip to show node info\nexport const tooltip_div = d3.select(\"body\")\n   .append(\"tooltip_div\")\n   .attr(\"class\", \"tooltip\")\n   .style(\"opacity\", 0)\n   .style(\"display\", \"none\");\n\nexport const highlight = (d) => {\n    // TODO: slider\n    let left = d3.event.pageX -20;\n    let top = d3.event.pageY + 20;\n \n    if (window.innerWidth - left < 150){\n      left = d3.event.pageX - 40;\n    }\n \n    d3.selectAll(\"circle\")\n        .attr(\"r\", 5);\n\n    tooltip_div.transition()\n        .duration(200)\n        .style(\"opacity\", .9);\n\n    d3.selectAll(\".CO-\" + d.name)\n        .attr(\"r\", 15);\n\n    // adjust the text on the range slider\n    d3.select(\"#nRadius-value\").text(d.name);\n    d3.select(\"#nRadius\").property(\"value\", d.name);\n\n    tooltip_div.html(tooltipHTML(d))\n        .style(\"left\", left + 'px')\n        .style(\"top\", top + 'px')\n        .style(\"display\", null);\n};\n\nexport const tooltipHTML = (d) => {\n    if (d.properties !== undefined) {\n        return \"<b>Cazul \" + d.properties.case_no + \"</b><br />\" +\n       (d.properties.gender === 'Bărbat'\n            ? \"Bărbat\"\n            : (d.properties.gender === 'Femeie'\n                ? \"Femeie\"\n                : \"Gen nespecificat\")) +\n       (d.properties.age != null && d.properties.age != 0 ? (\", \" + d.properties.age) : \"\") +\n       (d.properties.county != null && d.properties.county != \"\" ? (\", din  \" + d.properties.county) : \"\") + \".<br />\" +\n       (d.properties.status != null\n           ? (\"Status: \" + (d.properties.status === \"Vindecat\"\n                ? \"vindecat\"\n                : (d.properties.status === \"Confirmat\"\n                    ? \"confirmat\"\n                    : \"deces\")) + \".<br />\")\n           : \"\") +\n       (d.properties.healing_date !== null ? (\"Data recuperării: \" + d.properties.healing_date + \".<br />\") : \"\") +\n       (d.properties.reference !== null && d.properties.reference !== \"\" ? (\"Detalii: \" + '<a href=\"' + d.properties.reference + '\" target= \"_blank\">aici</a>') : \"\");\n    } else {\n        return d.name;\n    };\n};\n\nexport const unHighlight = () => {\n    tooltip_div.transition()\n        .duration(200)\n        .style(\"opacity\", 0);\n};\n","// simulation drag\nexport const drag = (simulation, positioning) => {\n    const dragstarted = d => {\n        if (positioning === 'map') { return };\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n    }\n\n    const dragged = d => {\n        if (positioning === 'map') { return };\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n    }\n\n    const dragended = d => {\n        if (positioning === 'map') { return };\n        if (!d3.event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n    }\n\n    return d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended);\n};\n\n// simulation link\nexport const linkArc = d => {\n    const r = Math.hypot(d.target.x - d.source.x, d.target.y - d.source.y);\n    return `\n      M${d.source.x},${d.source.y}\n      A${r},${r} 0 0,1 ${d.target.x},${d.target.y}\n    `;\n};","export const statusColor = d3.scaleOrdinal([\"var(--main-confirmate)\", \"var(--main-recuperari\", \"var(--main-decese)\"]).domain([\"Confirmat\", \"Vindecat\", \"Decedat\"]);\n\n// https://medialab.github.io/iwanthue/\n// hcl[0]>=0 && hcl[0]<=340\n//     && hcl[1]>=30 && hcl[1]<=80\n//     && hcl[2]>=35 && hcl[2]<=100\nconst countyColors = [\n    \"#e4588c\", \"#35d394\", \"#ba1ea8\", \"#4caf1c\", \"#1848ca\", \"#aad42b\", \"#9b85ff\", \"#068400\", \"#8b2487\", \"#97ff8b\", \"#d60042\", \"#00ae87\", \"#f94740\", \"#48d3ff\", \"#d17300\", \"#5ea2ff\", \"#cfb100\", \"#53498f\", \"#ffe353\", \"#325383\", \"#86a700\", \"#ff9eeb\", \"#007f30\", \"#d9b6ff\", \"#3b5c12\", \"#89c2ff\", \"#964000\", \"#00bfbb\", \"#ff6f54\", \"#01aac6\", \"#ffb65d\", \"#008857\", \"#ff8e90\", \"#145f36\", \"#952e31\", \"#fffea6\", \"#8e3440\", \"#5a936f\", \"#883d0c\", \"#ffaf81\", \"#82401e\", \"#b09764\", \"#855b00\"\n];\nconst counties = [\n    \"ALBA\", \"ARAD\", \"ARGEȘ\", \"BACĂU\", \"BIHOR\", \"BISTRIȚA-NĂSĂUD\", \"BOTOȘANI\", \"BRAȘOV\", \"BRĂILA\", \"BUCUREȘTI\", \"BUZĂU\", \"CARAȘ-SEVERIN\", \"CLUJ\", \"CONSTANȚA\", \"COVASNA\", \"CĂLĂRAȘI\", \"DOLJ\", \"DÂMBOVIȚA\", \"GALAȚI\", \"GIURGIU\", \"GORJ\", \"HARGHITA\", \"HUNEDOARA\", \"IALOMIȚA\", \"IAȘI\", \"ILFOV\", \"JUDEȚ NECUNOSCUT\", \"MARAMUREȘ\", \"MEHEDINȚI\", \"MUREȘ\", \"NEAMȚ\", \"OLT\", \"PRAHOVA\", \"SATU MARE\", \"SIBIU\", \"SUCEAVA\", \"SĂLAJ\", \"TELEORMAN\", \"TIMIȘ\", \"TULCEA\", \"VASLUI\", \"VRANCEA\", \"VÂLCEA\"\n];\nexport const countyColor = d3.scaleOrdinal(countyColors).domain(counties);\n\nexport const coloreazaStatus = () => {\n    let svg = d3.select(\"#chart\").select('svg');\n\n    svg.selectAll('circle')\n        .transition().duration(100)\n        .attr(\"fill\", d => {\n            return (d.is_country_of_infection)\n                ? \"black\"\n                : (d.parent && d.parent.properties\n                    ? statusColor(d.parent.properties.status)\n                    : d.properties ? statusColor(d.properties.status) : \"black\");\n        });\n\n    createLegend(statusColor);\n}\n\nexport const coloreazaJudete = (countyColor) => {\n    let svg = d3.select(\"#chart\").select('svg');\n\n    svg.selectAll('circle')\n        .transition().duration(100)\n        .attr(\"fill\", d => {\n            return (d.is_country_of_infection)\n                ? \"black\"\n                : (d.parent && d.parent.properties\n                        ? countyColor(d.parent.properties.county)\n                        : d.properties ? countyColor(d.properties.county) : \"\");\n        });\n\n    createLegend(countyColor);\n}\n\nexport const createLegend = (colorScale) => {\n    let svg = d3.select(\"#chart\").select('svg');\n    let x = 20, y = 50;\n\n    svg.selectAll('.category-legend')\n        .attr('transform', `translate(${x},${y})`);\n\n    const categoryLegend = d3.legendColor()\n                            .shape('path', d3.symbol().type(d3.symbolCircle).size(150)())\n                            .shapePadding(10)\n                            .scale(colorScale);\n\n    d3.select('.category-legend')\n        .call(categoryLegend);\n}","import * as Config from './Config';\nimport * as Tooltip from './Tooltip';\nimport * as Simulation from './Simulation';\nimport * as Utils from './Utils';\nimport * as Layout from './Layout';\n\nlet graph = {nodes: [], links: []};\nlet simulation, links, nodes;\nlet casesData, geoData;\nlet positioning = 'diagram';\n\nconst promises = [\n    d3.json(\"data/judete_wgs84.json\"),\n    d3.json(\"https://covid19.geo-spatial.org/api/statistics/getCaseRelations\")\n];\n\nPromise.all(promises).then( data => {\n    geoData = data[0];\n    casesData = data[1];\n\n    setupGraph();\n    setTimeout(drawGraph(), 100);\n}).catch(\n    error => console.log(error)\n);\n\nconst setupGraph = () => {\n\n    const sources = casesData.data.nodes.filter( d => d.properties.country_of_infection !== null && d.properties.country_of_infection !== \"România\" && d.properties.country_of_infection !== \"Romania\");\n\n    // https://observablehq.com/d/cedc594061a988c6\n    graph.nodes = casesData.data.nodes.concat(Array.from(new Set(sources.map(d => d.properties.country_of_infection)), name => ({name})));\n    graph.links = casesData.data.links.concat(sources.map(d => ({target: d.name, source: d.properties.country_of_infection})));\n\n}\n\nconst drawGraph = () => {\n    const layer = \"judete_wgs84\";\n\n    const geoCounties = topojson.feature(geoData, geoData.objects[layer]).features;\n\n    let countiesCentroids = d3.map();\n    geoCounties.forEach( d => {\n        let county = d.properties.county;\n        countiesCentroids.set(county, {\n            lat: d.properties.lat,\n            lon: d.properties.lon,\n        });\n    });\n\n    graph.nodes.forEach( d => {\n        if (d.properties !== undefined) {\n            d.latitude = countiesCentroids.get(d.properties.county) && countiesCentroids.get(d.properties.county).lat;\n            d.longitude = countiesCentroids.get(d.properties.county) && countiesCentroids.get(d.properties.county).lon;\n        };\n    });\n\n    // Zoom by scroll, pan\n    const zoom_actions = () => {\n        g.attr(\"transform\", d3.event.transform);\n    };\n    const zoom_handler = d3.zoom()\n        .on(\"zoom\", zoom_actions);\n\n    // Change colors from status to counties and vice versa\n    d3.select(\"#switch-colors\")\n        .on(\"click\", function(){\n            const button = d3.select(this);\n            if (button.text() === \"Județe\"){\n                Layout.coloreazaJudete(Layout.countyColor);\n                button.text(\"Stare\");\n            } else {\n                Layout.coloreazaStatus(Layout.statusColor);\n                button.text(\"Județe\");\n            };\n        });\n\n    // Case slider to highlight nodes by id\n    // https://bl.ocks.org/d3noob/c4b31a539304c29767a56c2373eeed79/9d18fc47e580d8c940ffffea1179e77e62647e36\n    const cases = Array.from(new Set(graph.nodes.map(d => d.properties ? d.properties.case_no : \"\")));\n\n    d3.select(\"#nRadius\").property(\"max\", d3.max(cases));\n    // updateR the slider\n    const updateRadius = (nRadius) => {\n\n        if (cases.includes(nRadius)) {\n            // adjust the text on the range slider\n            d3.select(\"#nRadius-value\").text(nRadius);\n            d3.select(\"#nRadius\").property(\"value\", nRadius);\n\n            // highlight case\n            d3.selectAll(\"circle\")\n                .attr(\"r\", 5);\n            d3.select(\".CO-\" + nRadius)\n                .attr(\"r\", 15)\n                .dispatch('mouseover');\n        }\n    }\n\n    // when the input range changes highlight the circle\n    d3.select(\"#nRadius\").on(\"input\", function() {\n        updateRadius(+this.value);\n    });\n    // Select latest case\n    updateRadius(d3.max(cases));\n\n    // Setup the simulation\n    // https://gist.github.com/mbostock/1153292\n\n    const ticked = () => {\n        update(links, nodes)\n    };\n    const update = (links, nodes) => {\n        links.attr(\"d\", Simulation.linkArc);\n        nodes.attr(\"transform\", d => `translate(${d.x},${d.y})`);\n    };\n\n    simulation = d3.forceSimulation(graph.nodes)\n        .force(\"link\", d3.forceLink(graph.links).id( d => {\n            let name = JSON.parse(JSON.stringify(d)).name;\n            return name;\n        }))\n        .force(\"charge\", d3.forceManyBody()\n            .strength(-140)\n            .distanceMax(1400))\n        .force(\"center\", d3.forceCenter(Config.width / 2, Config.height / 2))\n        .force('collision', d3.forceCollide().radius( d =>  d.radius ))\n        .force(\"x\", d3.forceX())\n        .force(\"y\", d3.forceY())\n        .alphaDecay([0.02]);\n        // .stop();\n\n    simulation.on('tick', ticked);\n    simulation.force('link').links(graph.links);\n    // Append the svg object to the chart div, and a group for nodes and links\n    const svg = d3.select(\"#chart\")\n        .append(\"svg\")\n            .attr(\"class\", \"chart-group\")\n            .attr(\"preserveAspectRatio\", \"xMidYMid\")\n            .attr(\"width\", Config.svg_width)\n            .attr(\"height\", Config.svg_height)\n            .attr(\"viewBox\", '0, 0 ' + Config.svg_width + ' ' + Config.svg_height)\n            .on(\"click\", () => { Tooltip.unHighlight(); });\n    const g = svg.append(\"g\")\n        .attr(\"transform\",\n        \"translate(\" + Config.margin.left + \",\" + Config.margin.top + \")\");\n\n    // Add counties map\n    const geojsonFeatures = topojson.feature(geoData, {\n        type: \"GeometryCollection\",\n        geometries: geoData.objects[layer].geometries\n    });\n\n    const thisMapPath = d3.geoPath()\n        .projection(\n            Config.projection\n                  .fitSize([Config.width, Config.height], geojsonFeatures)\n                  );\n\n    const map = g.append(\"g\")\n        .attr(\"class\", \"map-features\")\n        .selectAll(\"path\")\n            .data(geoCounties)\n            .enter()\n            .append(\"path\")\n            .attr(\"d\", thisMapPath)\n                .attr(\"class\", \"land\")\n                .attr(\"opacity\", 0.25);\n\n    // Add arrows for links\n    const markerTypes = Array.from(new Set(graph.nodes.map(d => d.source)));\n    g.append(\"defs\").selectAll(\"marker\")\n        .data(markerTypes)\n            .join(\"marker\")\n                .attr(\"id\", d => `arrow-${d}`)\n                .attr(\"viewBox\", \"0 -5 10 10\")\n                .attr(\"refX\", 15)\n                .attr(\"refY\", -0.5)\n                .attr(\"markerWidth\", 6)\n                .attr(\"markerHeight\", 6)\n                .attr(\"orient\", \"auto\")\n            .append(\"path\")\n                .attr(\"fill\", \"#999\")\n                .attr(\"d\", \"M0,-5L10,0L0,5\");\n    \n    links = g.append(\"g\")\n            .attr(\"class\", \"link\")\n            .selectAll(\"path\")\n            .data(graph.links)\n            .join(\"path\")\n                .attr(\"marker-end\", d => `url(${new URL(`#arrow-${d.type}`, location.toString())})`);\n    links.exit().remove();\n\n    nodes = g.append(\"g\")\n        .attr(\"class\", \"node\")\n        .selectAll(\"g\")\n        .data(graph.nodes)\n        .join(\"g\")\n            .call(Simulation.drag(simulation, positioning));\n\n    const fade = Utils.setFade(graph.links);\n    nodes.append(\"circle\")\n        .attr(\"class\", d => d.properties && `CO-${d.properties.case_no}`)\n        .attr(\"r\", 5)\n        .on(\"touchmove mouseover\", d => {\n            Tooltip.highlight(d);\n            // fade(nodes, links, .2);\n        })\n        // .on(\"touchend mouseout\", fade(nodes, links, 1))\n        ;\n\n    nodes.append(\"text\")\n        .attr(\"class\", \"node-labels\")\n        .attr(\"x\", 8)\n        .attr(\"y\", \"0.31em\")\n        .text(d => {\n            return d.is_country_of_infection ? d.country_name : (\"#\" + d.name);\n        })\n        .clone(true).lower();\n    nodes.exit().remove();\n\n    // Color the legend for counties\n    Layout.coloreazaStatus();\n    svg.append('g')\n        .attr('class', 'category-legend');\n    Layout.createLegend(Layout.statusColor);\n\n    // Apply zoom handler\n    zoom_handler(svg);\n\n    // Toggle map\n    // https://bl.ocks.org/cmgiven/4cfa1a95f9b952622280a90138842b79\n    const fixed = (immediate) => {\n        graph.nodes.forEach(function (d) {\n            const pos = Config.projection([d.longitude, d.latitude]);\n            d.x = pos[0] || d.x;\n            d.y = pos[1] || d.y;\n        });\n\n        const t = d3.transition()\n            .duration(immediate ? 0 : 800)\n            .ease(d3.easeElastic.period(0.5));\n\n        update(links.transition(t), nodes.transition(t));\n    };\n\n    const toggle = () => {\n        if (positioning === \"diagram\") {\n            positioning = \"map\";\n            map.attr(\"opacity\", 1);\n            simulation.stop();\n            fixed();\n        } else {\n            positioning = \"diagram\";\n            map.attr(\"opacity\", 0.25);\n            simulation.alpha(1).restart();\n        };\n        nodes.call(Simulation.drag(simulation, positioning));\n    };\n\n    d3.select(\"#toggle-map\")\n        .on(\"click\", function(){\n            const button = d3.select(this);\n            if (button.text() === \"Hartă\"){\n                toggle();\n                button.text(\"Rețea\");\n            } else {\n                toggle();\n                button.text(\"Hartă\");\n            };\n        });\n\n};\n","// https://bl.ocks.org/martinjc/5e73d17699573ccd7c2d4468d61dce17/8c047553db6e8627553165ee283cfd525416605c\n// build a dictionary of nodes that are linked\n\nexport const setFade = links => {\n    const linkedByIndex = {};\n    links.forEach(function(d) {\n        linkedByIndex[d.source.index + \",\" + d.target.index] = 1;\n    });\n\n    // check the dictionary to see if nodes are linked\n    const isConnected = (a, b) => {\n        return linkedByIndex[a.index + \",\" + b.index] || linkedByIndex[b.index + \",\" + a.index] || a.index == b.index;\n    }\n\n    // fade nodes on hover\n    const fade = (node, link, opacity) => {\n        // TODO redo\n        return function(d) {\n            // check all other nodes to see if they're connected\n            // to this one. if so, keep the opacity at 1, otherwise\n            // fade\n            node.style(\"stroke-opacity\", function(o) {\n                const thisOpacity = isConnected(d, o) ? 1 : opacity;\n                return thisOpacity;\n            });\n            node.style(\"fill-opacity\", function(o) {\n                const thisOpacity = isConnected(d, o) ? 1 : opacity;\n                return thisOpacity;\n            });\n            // also style link accordingly\n            link.style(\"stroke-opacity\", function(o) {\n                return o.source === d || o.target === d ? 1 : opacity;\n            });\n        };\n    }\n\n    return fade;\n}\n"],"names":["margin","width","height","svg_width","svg_height","projection","d3","geoAlbers","center","rotate","parallels","scale","tooltip_div","geoPath","select","append","attr","style","tooltipHTML","d","undefined","properties","case_no","gender","age","county","status","healing_date","reference","name","drag","simulation","positioning","on","event","active","alphaTarget","restart","fx","x","fy","y","linkArc","r","Math","hypot","target","source","statusColor","scaleOrdinal","domain","countyColor","coloreazaStatus","selectAll","transition","duration","parent","createLegend","colorScale","categoryLegend","legendColor","shape","symbol","type","symbolCircle","size","shapePadding","call","links","nodes","casesData","geoData","graph","promises","json","Promise","all","then","data","setupGraph","setTimeout","drawGraph","catch","error","console","log","sources","filter","country_of_infection","concat","Array","from","Set","map","geoCounties","topojson","feature","objects","features","countiesCentroids","forEach","set","lat","lon","latitude","get","longitude","zoom_handler","zoom","g","transform","button","this","text","Layout.coloreazaJudete","Layout.countyColor","Layout.coloreazaStatus","cases","property","max","updateRadius","nRadius","includes","dispatch","value","update","Simulation.linkArc","forceSimulation","force","forceLink","id","JSON","parse","stringify","forceManyBody","strength","distanceMax","forceCenter","Config.width","Config.height","forceCollide","radius","forceX","forceY","alphaDecay","svg","Config.svg_width","Config.svg_height","Config.margin","geojsonFeatures","geometries","thisMapPath","Config.projection","fitSize","enter","markerTypes","join","URL","location","toString","exit","remove","Simulation.drag","linkedByIndex","index","isConnected","a","b","Utils.setFade","left","pageX","top","pageY","window","innerWidth","html","Tooltip.highlight","is_country_of_infection","country_name","clone","lower","Layout.createLegend","Layout.statusColor","toggle","stop","immediate","pos","t","ease","easeElastic","period","fixed","alpha"],"mappings":"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"}